# -*- coding: utf-8 -*-
"""Fashion retail sales analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yX5OkQoCD7Mp0ctbf8vJ9lcUCdT2Bz9t

importing the necessary libraries for data manipulation, visualization, and analysis.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""Load dataset"""

df = pd.read_csv('Fashion_Retail_Sales.csv' )

"""Display first 5 rows"""

print(df.head(5))

print(df.info())

"""checking for missing values"""

print(df.isnull().sum())

print(df.describe(include='all'))

# Strategy: Fill missing numeric values with the median or mean, and categorical values with the mode
# For Purchase Amount (USD), fill missing values with the median
df['Purchase Amount (USD)'] = df['Purchase Amount (USD)'].fillna(df['Purchase Amount (USD)'].median())

# For Review Rating, fill missing values with the median
df['Review Rating'] = df['Review Rating'].fillna(df['Review Rating'].median())

# Verify that missing values have been handled
print("\nMissing Values After Handling:")
print(df.isnull().sum())

"""Convert Date Column to DateTime Format"""

df['Date Purchase'] = pd.to_datetime(df['Date Purchase'], format='%d-%m-%Y')

# Verify the conversion
print("\nDate Purchase Column After Conversion:")
print(df['Date Purchase'].head())

df['Month'] = df['Date Purchase'].dt.to_period('M')
monthly_sales = df.groupby('Month')['Purchase Amount (USD)'].sum()

"""Exploratory Data Analysis (EDA)"""

# Plot monthly sales
plt.figure(figsize=(10, 6))
monthly_sales.plot(kind='line', marker='o', color='blue')
plt.title('Monthly Sales Trend')
plt.xlabel('Month')
plt.ylabel('Total Sales (USD)')
plt.grid()
plt.show()

"""Most Popular Items


"""

item_counts = df['Item Purchased'].value_counts().head(10)  # Updated column name

# Plot top 10 most popular items
plt.figure(figsize=(10, 6))
item_counts.plot(kind='bar', color='green')
plt.title('Top 10 Most Popular Items')
plt.xlabel('Item Purchased')  # Updated label
plt.ylabel('Number of Purchases')
plt.xticks(rotation=45)
plt.show()

# Count the occurrences of each payment method
payment_counts = df['Payment Method'].value_counts()

# Plot payment method preferences
plt.figure(figsize=(8, 6))
payment_counts.plot(kind='pie', autopct='%1.1f%%', startangle=90, colors=['lightblue', 'lightgreen'])
plt.title('Payment Method Preferences')
plt.ylabel('')
plt.show()

"""Advanced Analysis"""

# Calculate correlation
correlation = df[['Purchase Amount (USD)', 'Review Rating']].corr()

# Plot heatmap
plt.figure(figsize=(6, 4))
sns.heatmap(correlation, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Heatmap')
plt.show()

"""Customer Segmentation by Spending"""

# Create bins for spending categories
bins = [0, 50, 100, 200, np.inf]
labels = ['Low', 'Medium', 'High', 'Very High']
df['Spending Category'] = pd.cut(df['Purchase Amount (USD)'], bins=bins, labels=labels)

# Count customers in each category
spending_counts = df['Spending Category'].value_counts()

# Plot spending categories
plt.figure(figsize=(8, 6))
spending_counts.plot(kind='bar', color='orange')
plt.title('Customer Spending Categories')
plt.xlabel('Spending Category')
plt.ylabel('Number of Customers')
plt.xticks(rotation=0)
plt.show()

# Export the cleaned dataset to a new CSV file
df.to_csv('Cleaned_Fashion_Retail_Sales.csv', index=False)
print("Cleaned dataset exported successfully.")